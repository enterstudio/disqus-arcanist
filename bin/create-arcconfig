#!/bin/bash

root=$@
if [ -z $root ]; then
    root=$PWD
fi

root=$(dirname "$root")/$(basename "$root")

arc_path="${root}/.arcconfig"

if [ -e $arc_path ]; then
  echo "There is already a configuration file at $arc_path."
  echo -n "Do you want to continue and overwrite the existing file? [yN] "

  read ok

  if [[ $ok != "y" && $ok != "Y" ]]; then
    exit 0
  fi
fi

project_id=$(echo "$root" | python -c "import sys; print sys.stdin.read().rsplit('/', 1)[-1]")

libdisqus_path=$(brew --prefix arcanist)/arcanist/externals/includes/libdisqus/src

echo "Creating default .arcconfig at '$arc_path'"

{ cat <<EOT
{
  "project_id": "$project_id",
  "conduit_uri": "http://ph.in.zhihu.com",
  "arc.land.onto.default": "master",
  "arc.land.remote.default": "origin",
  "events.listeners": ["JenkinsDiffEventListener"],
  "jenkins.uri": "http://ci.in.zhihu.com",
  "jenkins.job": "$project_id",
  "load": ["$libdisqus_path"]
}
EOT
} > $arc_path

arclint_path="${root}/.arclint"
echo "Creating default .arclint at '$arclint_path'"

{ cat <<EOT
{
  "linters": {
    "flake8": {
      "type": "flake8",
      "include": "(\\\\.py$)",
      "severity": {
        "E129": "disabled",
        "E501": "disabled"
      }
    },
    "merge-conflict": {
      "type": "merge-conflict"
    }
  }
}
EOT
} > $arclint_path
